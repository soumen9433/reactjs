"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var lodash_1 = require("lodash");
var React = require("react");
var ReactDOM = require("react-dom");
var h_map_methods_1 = require("./mixins/h-map-methods");
var cache_1 = require("./utils/cache");
var get_link_1 = require("./utils/get-link");
var get_platform_1 = require("./utils/get-platform");
var get_script_map_1 = require("./utils/get-script-map");
// export the HEREMap React Component from this module
let HEREMap = class HEREMap extends React.Component {
    constructor(props, context) {
        super(props, context);
        // add the state property
        this.state = {};
        // bind all event handling methods to this
        this.resizeMap = this.resizeMap.bind(this);
        // debounce the resize map method
        this.debouncedResizeMap = lodash_1.debounce(this.resizeMap, 200);
    }
    getChildContext() {
        const { map } = this.state;
        return { map };
    }
    componentDidMount() {
        cache_1.onAllLoad(() => {
            const { appId, appCode, center, hidpi, interactive, secure, zoom, } = this.props;
            // get the platform to base the maps on
            const platform = get_platform_1.default({
                app_code: appCode,
                app_id: appId,
                useHTTPS: secure === true
            });
            const defaultLayers = platform.createDefaultLayers({
                ppi: hidpi ? 320 : 72
            });
            const hereMapEl = ReactDOM.findDOMNode(this);
            const map = new H.Map(hereMapEl.querySelector(".map-container"), defaultLayers.normal.map, {
                center,
                pixelRatio: hidpi ? 2 : 1,
                zoom
            });
            if (interactive !== false) {
                // make the map interactive
                // MapEvents enables the event system
                // Behavior implements default interactions for pan/zoom
                const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
                // create the default UI for the map
                const ui = H.ui.UI.createDefault(map, defaultLayers);
                this.setState({
                    behavior,
                    ui
                });
            }
            // make the map resize when the window gets resized
            window.addEventListener("resize", this.debouncedResizeMap);
            // attach the map object to the component"s state
            this.setState({ map });
        });
    }
    componentWillMount() {
        const { secure, } = this.props;
        cache_1.default(get_script_map_1.default(secure === true));
        const stylesheetUrl = `${secure === true ? "https:" : ""}//js.api.here.com/v3/3.0/mapsjs-ui.css`;
        get_link_1.default(stylesheetUrl, "HERE Maps UI");
    }
    componentWillUnmount() {
        // make the map resize when the window gets resized
        window.removeEventListener("resize", this.debouncedResizeMap);
    }
    render() {
        const { children } = this.props;
        return (React.createElement("div", null,
            React.createElement("div", { className: "map-container", id: `map-container-${lodash_1.uniqueId()}`, style: { height: "100%" } }, children)));
    }
    resizeMap() {
        const { map, } = this.state;
        if (map) {
            map.getViewPort().resize();
        }
    }
};
HEREMap.childContextTypes = {
    map: React.PropTypes.object
};
HEREMap = __decorate([
    h_map_methods_1.default
], HEREMap);
exports.HEREMap = HEREMap;
// make the HEREMap component the default export
exports.default = HEREMap;
